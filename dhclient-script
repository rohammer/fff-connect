#!/bin/bash
echo $reason
echo $new_ip_address
echo $new_rfc3442_classless_static_routes
echo $new_routers
case "$reason" in

BOUND|RENEW|REBIND|REBOOT)

        if [ -n "$old_ip_address" ] && [ -n "$alias_ip_address" ] &&
           [ "$alias_ip_address" != "$old_ip_address" ]; then
            # alias IP may have changed => flush it
            ip -4 addr flush dev ${interface} label ${interface}:0
        fi

        if [ -n "$old_ip_address" ] &&
           [ "$old_ip_address" != "$new_ip_address" ]; then
            # leased IP has changed => flush it
            ip -4 addr flush dev ${interface} label ${interface}
        fi

        if [ -z "$old_ip_address" ] ||
           [ "$old_ip_address" != "$new_ip_address" ] ||
           [ "$reason" = "BOUND" ] || [ "$reason" = "REBOOT" ]; then
            # new IP has been leased or leased IP changed => set it
            ip -4 addr add ${new_ip_address}${new_subnet_mask:+/$new_subnet_mask} \
                ${new_broadcast_address:+broadcast $new_broadcast_address} \
                dev ${interface} label ${interface}

            if [ -n "$new_interface_mtu" ]; then
                # set MTU
                ip link set dev ${interface} mtu ${new_interface_mtu}
            fi

            # if we have $new_rfc3442_classless_static_routes then we have to
            # ignore $new_routers entirely
            if [ ! "$new_rfc3442_classless_static_routes" ]; then
                    # set if_metric if IF_METRIC is set or there's more than one ro$
                    if_metric="$IF_METRIC"
                    if [ "${new_routers%% *}" != "${new_routers}" ]; then
                        if_metric=${if_metric:-1}
                    fi

#                    for router in $new_routers; do
#                        if [ "$new_subnet_mask" = "255.255.255.255" ]; then
#                            # point-to-point connection => set explicit route
#                            ip -4 route add ${router} dev $interface >/dev/null 2>&1
#                        fi
#
#                        # set default route
#                        ip -4 route add default via ${router} dev ${interface} \
#                            ${if_metric:+metric $if_metric} >/dev/null 2>&1
#
#                        if [ -n "$if_metric" ]; then
#                            if_metric=$((if_metric+1))
#                        fi
#                    done
            fi
        fi

        if [ -n "$alias_ip_address" ] &&
           [ "$new_ip_address" != "$alias_ip_address" ]; then
            # separate alias IP given, which may have changed
            # => flush it, set it & add host route to it
            ip -4 addr flush dev ${interface} label ${interface}:0
            ip -4 addr add ${alias_ip_address}${alias_subnet_mask:+/$alias_subnet_mask} \$
                dev ${interface} label ${interface}:0
            ip -4 route add ${alias_ip_address} dev ${interface} >/dev/null 2>&1
        fi

        # update /etc/resolv.conf
#        make_resolv_conf

        ;;
esac
